// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Product {
    productId    Int      @id @default(autoincrement())
    manufacturer String
    productName  String   @unique
    sizeUnit     String
    createdDate  DateTime @default(now())
    updatedDate  DateTime @updatedAt

    productSizes ProductSize[]
}

model ProductSize {
    productSizeId Int      @id @default(autoincrement())
    productId     Int
    size          Float
    listPrice     Float
    createdDate   DateTime @default(now())

    product       Product        @relation(fields: [productId], references: [productId], onDelete: Cascade)
    offerProducts OfferProduct[]
}

model Client {
    clientName       String   @id
    address          String
    mailId           String[]
    alternateNumbers String[]
    createdDate      DateTime @default(now())
    updatedDate      DateTime @updatedAt

    offers   Offer[]
    projects Project[]
}

model Project {
    projectId   String   @id @default(uuid())
    projectName String
    clientName  String
    createdDate DateTime @default(now())
    updatedDate DateTime @updatedAt

    client Client  @relation(fields: [clientName], references: [clientName], onDelete: Cascade)
    offers Offer[]
}

model Offer {
    offerId     String   @id @default(uuid())
    offerNumber String
    client      Client   @relation(fields: [clientName], references: [clientName], onDelete: Cascade)
    clientName  String
    project     Project  @relation(fields: [projectId], references: [projectId], onDelete: Cascade)
    projectId   String
    totalPrice  Float
    isEnquired  Boolean  @default(false)
    isCurrent   Boolean  @default(true)
    createdDate DateTime @default(now())

    offerProducts OfferProduct[]
}

model OfferProduct {
    offerProductId String   @id @default(uuid())
    offer          Offer    @relation(fields: [offerId], references: [offerId], onDelete: Cascade)
    offerId        String
    productSizeId  Int
    quantity       Int      @default(0)
    discount       Float    @default(0)
    createdDate    DateTime @default(now())

    productSize ProductSize @relation(fields: [productSizeId], references: [productSizeId], onDelete: Cascade)
}
